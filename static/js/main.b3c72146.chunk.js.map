{"version":3,"sources":["Home.js","index.js","assets/banner.png","assets/moneystack.jpg"],"names":["Home","props","percentChange","goal","parseFloat","state","newpercent","current","setState","percentcomplete","pleaseDoSomething","e","date","amount","history","hold","target","value","alert","toggleAdditionOn","addition","toggleAdditionOff","toggleSubtractionOn","subtraction","toggleSubtractionOff","toggleGoalOff","goaltoggle","toggleGoalOn","toggleHistoryOn","historytoggle","toggleHistoryOff","startGoalDisplay","goalMet","celebration","updateMyDate","updateMyAmount","i","updateMyGoal","appearAddition","className","id","onChange","placeholder","type","onClick","document","forms","reset","appearSubtraction","appearHistory","map","item","index","key","appearGoal","bind","src","banner","alt","this","style","height","money","React","Component","MoneyStack","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b3c72146.chunk.js","sourcesContent":["import React from 'react';\r\nimport banner from './assets/banner.png';\r\nimport money from './assets/moneystack.jpg';\r\n// import Celebration from './components/Celebration';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goal: 0,\r\n            current: 0,\r\n            percentcomplete: 0,\r\n            history: [],\r\n            celebration: false,\r\n            addition: false,\r\n            subtraction: false,\r\n            goaltoggle: true,\r\n            historytoggle: false,\r\n            date: '',\r\n            amount: 0\r\n        };\r\n        this.percentChange = this.percentChange.bind(this)\r\n    }\r\n\r\n    //div growing math\r\n\r\n    percentChange = () => {\r\n        let goal = parseFloat(this.state.goal);\r\n        let current = parseFloat(this.state.current);\r\n        let newpercent = ((current / goal) * 100);\r\n        this.setState({ percentcomplete: newpercent });\r\n    }\r\n\r\n    ///every amount update\r\n\r\n    pleaseDoSomething = (e) => {\r\n        //take date+amount and push into this.state.history\r\n        if (this.state.date !== '' && this.state.amount !== 0) {\r\n            this.setState({ history: [...this.state.history, [this.state.date + \" \", this.state.amount]] });\r\n\r\n            //set new current amount\r\n            let hold = 0\r\n            hold += parseFloat(this.state.current) + parseFloat(this.state.amount);\r\n            this.setState({ current: (hold) });\r\n\r\n            //reset state\r\n            this.setState({ date: '' });\r\n            this.setState({ amount: 0 });\r\n\r\n            e.target.value = ''\r\n            //no goal set yet!\r\n            if (this.state.goal <= 0) {\r\n                alert('no goal set!');\r\n            }\r\n\r\n            return\r\n        } else { return alert(\"set date and amount\") }\r\n    }\r\n\r\n    //toggles\r\n\r\n    toggleAdditionOn = () => {\r\n        this.setState({ addition: true })\r\n    }\r\n    toggleAdditionOff = () => {\r\n        this.setState({ addition: false })\r\n    }\r\n    toggleSubtractionOn = () => {\r\n        this.setState({ subtraction: true })\r\n    }\r\n    toggleSubtractionOff = () => {\r\n        this.setState({ subtraction: false })\r\n    }\r\n    toggleGoalOff = () => {\r\n        this.setState({ goaltoggle: false })\r\n    }\r\n    toggleGoalOn = () => {\r\n        this.setState({ goaltoggle: true })\r\n    }\r\n\r\n    toggleHistoryOn = () => {\r\n        this.setState({ historytoggle: true })\r\n    }\r\n\r\n    toggleHistoryOff = () => {\r\n        this.setState({ historytoggle: false })\r\n    }\r\n\r\n    startGoalDisplay = () => {\r\n        this.setState({ goaltoggle: false });\r\n\r\n    }\r\n\r\n    goalMet = () => {\r\n        if (this.state.goal !== 0 && this.state.goal <= this.state.current) {\r\n            this.setState({ celebration: true })\r\n            return null\r\n        }\r\n        if (this.state.goal > this.state.current) {\r\n            this.setState({ celebration: false })\r\n        }\r\n    }\r\n\r\n    //update states with use input\r\n\r\n    updateMyDate = (e) => {\r\n        this.setState({ date: (e.target.value) });\r\n    }\r\n    updateMyAmount = (i, e) => {\r\n        this.setState({ amount: (i * e.target.value) });\r\n    }\r\n    updateMyGoal = (e) => {\r\n        this.setState({ goal: (e.target.value) });\r\n    }\r\n\r\n    //addition tab\r\n\r\n    appearAddition = () => {\r\n        if (this.state.addition === true) {\r\n            return (\r\n                <div className=\"additionpopup\">\r\n                    <h2>Update Your Cash</h2>\r\n                    <form id=\"additionform\">\r\n                        <p>Date</p>\r\n                        <input onChange={(e) => { this.updateMyDate(e) }} placeholder=\"Aug. 13\"></input>\r\n                        <p>$ Amount to Add</p>\r\n                        <input onChange={(e) => { this.updateMyAmount(1, e) }} placeholder=\"0.00\"></input>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <button type=\"button\" onClick={(e) => {\r\n                            this.pleaseDoSomething(e);\r\n                            document.forms[\"additionform\"].reset();\r\n                        }}>+ Money Stack</button>\r\n                    </form>\r\n                    <br></br>\r\n                    <button id=\"exitX\" onClick={() => {\r\n                        this.toggleAdditionOff();\r\n                        this.percentChange();\r\n                        document.forms[\"additionform\"].reset();\r\n                        this.goalMet();\r\n                    }\r\n                    }>Done</button>\r\n                </div>\r\n            );\r\n        } else { return (null); }\r\n    }\r\n\r\n    //subtraction tab\r\n\r\n    appearSubtraction = () => {\r\n        if (this.state.subtraction === true) {\r\n            return (\r\n                <div className=\"additionpopup\">\r\n                    <h2>Update Your Cash</h2>\r\n                    <form id=\"additionform\">\r\n                        <p>Date</p>\r\n                        <input onChange={(e) => { this.updateMyDate(e) }} placeholder=\"Aug. 13\"></input>\r\n                        <p>$ Amount to Subtract</p>\r\n                        <input onChange={(e) => { this.updateMyAmount(-1, e) }} placeholder=\"0.00\"></input>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <button type=\"button\" onClick={(e) => {\r\n                            this.pleaseDoSomething(e);\r\n                            document.forms[\"additionform\"].reset();\r\n                        }}>+ Money Stack</button>\r\n                    </form>\r\n                    <br></br>\r\n                    <button id=\"exitX\" onClick={() => {\r\n                        this.toggleSubtractionOff();\r\n                        this.percentChange();\r\n                        document.forms[\"additionform\"].reset();\r\n                        this.goalMet();\r\n                    }\r\n                    }>Done</button>\r\n                </div>\r\n            );\r\n        } else { return (null); }\r\n    }\r\n\r\n\r\n    //history tab\r\n\r\n    appearHistory = () => {\r\n        if (this.state.historytoggle === true) {\r\n            return (\r\n                <div className=\"additionpopup\">\r\n                    <h2>History</h2>\r\n                    {this.state.history.map((item, index) => (\r\n                        <p key={index}>{item}</p>\r\n                    ))}\r\n                    <button id=\"exitY\" onClick={() => {\r\n                        this.toggleHistoryOff();\r\n                    }\r\n                    }>Done</button>\r\n                </div>\r\n            );\r\n        } else { return (null); }\r\n    }\r\n\r\n    //goal start tab\r\n\r\n    appearGoal = () => {\r\n        if (this.state.goaltoggle === true) {\r\n            return (\r\n                <div id=\"setgoal\">\r\n                    <p>{'$ '}<input id=\"goalamountbox\" placeholder=\"Goal Amount\" onChange={(e) => {\r\n                        this.updateMyGoal(e)\r\n                    }}>\r\n                    </input><button\r\n                        onClick={() => {\r\n                            this.startGoalDisplay();\r\n                            this.percentChange();\r\n                        }}>set</button></p>\r\n                </div>\r\n            )\r\n        } else { return (<p id=\"thegoalnumber\">${this.state.goal}</p>) }\r\n    }\r\n\r\n    //celebration\r\n\r\n    // appearCelebration = () => {\r\n    //     if (this.state.celebration === true) {\r\n    //         return (<div id='celebration'>\r\n    //             <div className='red'></div>\r\n    //             <div className='blue'></div>\r\n    //             <div className='yellow'></div>\r\n    //             <div className='purple'></div>\r\n    //             <div className='green'></div>\r\n    //             <div className='pink'></div>\r\n    //             <div className='orange'></div>\r\n    //             <div className='sky'></div>\r\n    //         </div>)\r\n    //     } else { return (<div></div>) }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"main\">\r\n\r\n                    <div id=\"title\">\r\n                        <img id=\"goalBanner\" src={banner} alt=\"Goal banner\" />\r\n                    </div>\r\n\r\n                    <div id=\"goalnumber\">{this.appearGoal()}</div>\r\n\r\n                    <div id=\"percentEmpty\">\r\n\r\n                        <div id=\"percentComplete\"\r\n                            style={{ height: (this.state.percentcomplete + \"%\") }}\r\n                        >\r\n                            <img id=\"cashstack\" src={money} alt=\"cash stack\"\r\n                            ></img>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"white\">\r\n                        <p id=\"currentstate\">Current Amount: ${this.state.current}</p>\r\n\r\n                        <div id='history'>\r\n                            <button type=\"button\" onClick={() => {\r\n                                this.toggleHistoryOn();\r\n                            }}>History</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"buttons\">\r\n                        <button id=\"add\" onClick={() => {\r\n                            this.toggleAdditionOn();\r\n                        }}> + </button>\r\n\r\n                        <button id=\"sub\" onClick={() => {\r\n                            this.toggleSubtractionOn();\r\n                        }}> - </button>\r\n                    </div>\r\n                    {this.appearAddition()}\r\n                    {this.appearHistory()}\r\n                    {this.appearSubtraction()}\r\n\r\n                </div >\r\n                {/* {this.appearCelebration()} */}\r\n                {/* <Celebration celebration={this.state.celebration} /> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\n\nclass MoneyStack extends Component {\n  render() {\n    return (\n      <div>\n        <h1 id=\"apptitle\">Money Stacks</h1>\n        <Home />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<MoneyStack />, document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/banner.b05a4b37.png\";","module.exports = __webpack_public_path__ + \"static/media/moneystack.3297cfd4.jpg\";"],"sourceRoot":""}